package oop;

/**
 * Staff
 *
 * Интерфейс используется для обучающего персонала.
 */
interface Staff {

    /**
     * ✷ Помочь студенту (переопределяет метод из интерфейса)
     * Аргументы
     * ➜ Ссылка на студента, которому необходимо помочь
     * Возвращаемое значение
     * ➜ void
     *
     * Логика работы
     * ➜ Напечатать приободряющее сообщение, в сообщении должно быть имя студента
     * @param student
     */
    void helpsStudent(Student student);

    /**
     * Логика работы
     * ➜ В начале метода рандомно генерируется какое-то число, если это число больше 1000, то настроение
     * у ментора хорошее, иначе плохое.
     * ➜ Если у ментора плохое настроение, то он задачу не принимает. Должно быть напечатано сообщение о том,
     * что задача (в сообщении указать номер задачи) не принято и вернуть false.
     * ➜ Иначе напечатать сообщение о том, что задача принята и вернуть true.
     * @param task
     * @return
     */
    boolean codeReview(Task task);

    /**
     * Дефолтный метод Дать дополнительные материалы
     * Возвращаемое значение
     * ➜ void
     * Логика работы
     * ➜ Напечатать сообщение со ссылкой на Хабр
     */
    default void provideAdditionalMaterials() {
        System.out.println("Please check additional information and reach the materials in the internet source\n\t http://www.habr.ru ");
    }

}
